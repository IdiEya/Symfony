{% if not app.request.xmlhttprequest %}
    {% extends 'base.html.twig' %}
{% endif %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* Styles pour les messages d'erreur */
        .invalid-feedback {
            color: #dc3545 !important;
            font-size: 0.875em;
            display: block;
            margin-top: 0.25rem;
        }

        .is-invalid {
            border-color: #dc3545 !important;
            box-shadow: 0 0 0 0.25rem rgba(220,53,69,.25) !important;
        }

        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
        }

        /* Styles unifiés */
        .custom-card {
            max-width: 800px;
            margin: 2rem auto;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

        .btn-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
        }

        .form-image-preview {
            max-width: 200px;
            border: 2px dashed #ddd;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .form-image-preview:hover {
            transform: scale(1.05);
            border-color: #0d6efd;
        }

        .select2-container--default .select2-selection--single {
            height: 38px;
            border: 1px solid #ced4da;
            border-radius: 0.375rem;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 36px;
        }

        .form-control:focus, .form-select:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .btn-primary {
            background: #0d6efd;
            border-color: #0d6efd;
        }

        .btn-primary:hover {
            background: #0b5ed7;
            border-color: #0a58ca;
        }
    </style>
{% endblock %}

{% form_theme form _self %}

{% block form_errors %}
    {% if errors|length > 0 %}
        <div class="invalid-feedback">
            {% for error in errors %}
                {{ error.message }}
            {% endfor %}
        </div>
    {% endif %}
{% endblock %}

{% block body %}
<div class="container py-5">
    <div class="card-body">
        {% if app.request.hasPreviousSession %}
            {% for flash_error in app.session.flashbag.get('error') %}
                <div class="alert alert-danger">{{ flash_error }}</div>
            {% endfor %}
        {% endif %}

        {{ form_start(form, {'attr': {'action': path('app_produits_new'), 'id': 'produitForm','novalidate': 'novalidate'}}) }}
        <div class="row g-3">
            <!-- Colonne gauche -->
            <div class="col-md-6">
                <div class="mb-3">
                    {{ form_label(form.nom, 'Nom du produit', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.nom, {
                        'attr': {
                            'class': 'form-control form-control-lg ' ~ (form.nom.vars.valid ? '' : 'is-invalid'),
                            'required': 'required',
                            'maxlength': '100'
                        }
                    }) }}
                    {{ form_errors(form.nom) }}
                </div>

                <div class="mb-3">
                    {{ form_label(form.ref, 'Référence', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.ref, {
                        'attr': {
                            'class': 'form-control ' ~ (form.ref.vars.valid ? '' : 'is-invalid'),
                            'required': 'required',
                            'maxlength': '20'
                        }
                    }) }}
                    {{ form_errors(form.ref) }}
                </div>

                <div class="mb-3">
                    {{ form_label(form.prix, 'Prix', {'label_attr': {'class': 'form-label'}}) }}
                    <div class="input-group">
                        <span class="input-group-text">DT</span>
                        {{ form_widget(form.prix, {
                            'attr': {
                                'class': 'form-control ' ~ (form.prix.vars.valid ? '' : 'is-invalid'),
                                'required': 'required',
                                'min': '0.01'
                            }
                        }) }}
                    </div>
                    {{ form_errors(form.prix) }}
                </div>
            </div>

            <!-- Colonne droite -->
            <div class="col-md-6">
                <div class="mb-3">
                    {{ form_label(form.quantite, 'Quantité en stock', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.quantite, {
                        'attr': {
                            'class': 'form-control ' ~ (form.quantite.vars.valid ? '' : 'is-invalid'),
                            'required': 'required',
                            'min': '0'
                        }
                    }) }}
                    {{ form_errors(form.quantite) }}
                </div>

                <div class="mb-3">
                    {{ form_label(form.categorie, 'Catégorie', {'label_attr': {'class': 'form-label'}}) }}
                    <div class="input-group">
                        {{ form_widget(form.categorie, {
                            'attr': {
                                'class': 'form-select ' ~ (form.categorie.vars.valid ? '' : 'is-invalid'),
                                'data-controller': 'select2',
                                'data-placeholder': 'Sélectionnez une catégorie'
                            }
                        }) }}
                        <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#newCategoryModal">
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>
                    {{ form_errors(form.categorie) }}
                </div>

               <div class="mb-3">
                    {{ form_label(form.photo, 'Image du produit', {'label_attr': {'class': 'form-label'}}) }}
                    <div class="input-group">
                        {{ form_widget(form.photo, {
                            'attr': {
                                'class': 'form-control',
                                'accept': 'image/*',
                                'onchange': 'previewImage(this)'
                            }
                        }) }}
                    </div>
                    <div class="mt-2 text-center" id="imagePreview">
                        {% if form.vars.value and form.vars.value.photo %}
                            <img src="{{ asset('uploads/photos/' ~ form.vars.value.photo) }}" 
                                 class="form-image-preview img-fluid mt-2" 
                                 alt="Preview actuelle">
                        {% endif %}
                    </div>
                    {{ form_errors(form.photo) }}
                    <small class="form-text text-muted">
                        Formats acceptés : JPG, PNG, GIF (Max 2MB)
                    </small>
                </div>
            </div>


            <!-- Description -->
            <div class="mb-3">
                {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.description, {
                    'attr': {
                        'class': 'form-control ' ~ (form.description.vars.valid ? '' : 'is-invalid'),
                        'rows': 4,
                        'maxlength': '500'
                    }
                }) }}
                {{ form_errors(form.description) }}
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="background-color:rgb(195, 177, 229);">
                <i class="fas fa-times me-2"></i>Annuler
            </button>
            <button type="submit" class="btn btn-primary" style="background-color:rgb(195, 177, 229);">
                <i class="fas fa-save me-2"></i>Enregistrer
            </button>
        </div>
        {{ form_end(form) }}
    </div>
</div>

<script>
    function previewImage(input) {
        const file = input.files[0];
        const reader = new FileReader();
        reader.onload = function(e) {
            const imgPreview = document.getElementById('imagePreview');
            imgPreview.innerHTML = '<img src="' + e.target.result + '" class="form-image-preview img-fluid mt-2" alt="Image de prévisualisation">';
        };
        reader.readAsDataURL(file);
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        const handleFormSubmit = async (e) => {
            e.preventDefault();
            const form = e.target;
            const formData = new FormData(form);
            
            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                if (response.ok) {
                    const result = await response.text();
                    try {
                        const jsonData = JSON.parse(result);
                        if (jsonData.success) {
                            window.location.reload();
                            $('#newProductModal').modal('hide');
                        }
                    } catch {
                        document.querySelector('#newProductModal .modal-body').innerHTML = result;
                        const newForm = document.getElementById('produitForm');
                        if (newForm) newForm.addEventListener('submit', handleFormSubmit);
                    }
                }
            } catch (error) {
                console.error('Erreur:', error);
            }
        };

        const form = document.getElementById('produitForm');
        if (form) form.addEventListener('submit', handleFormSubmit);
    });
</script>
{% endblock %}